import discord
from discord.ext import commands
import logging
from database import DataBase
from PIL import Image
import requests
import random
from yandex_music import Client
import datetime as dt

logger = logging.getLogger('discord')
logger.setLevel(logging.DEBUG)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter('%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(handler)

db = DataBase('data/discord_bot.db')

city_game = False
channel_game = None
named_cities = []
reactions = {'üëå': 'Okay',
             'üëé': '—Ñ–∏–≥–æ–≤–æ'}
roles_for_buying = {'–•–æ—Ä–æ—à–∞—è —Ä–æ–ª—å': 500,
                    '–†–æ–ª—å –ø–æ—Ö—É–∂–µ': 200}

server, server_id, channel_name = None, None, None
domains = ['https://music.yandex.ru', 'http://music.yandex.ru']
client = Client().init()

intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix='!', intents=intents)


async def check_count(ctx):
    """–î–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–≥–æ, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—Ä—É–≥–Ω—É–ª—Å—è. –ö–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π —Ä–∞–∑ - –º—É—Ç"""
    user_id = ctx.author.id
    sql = f'SELECT counter FROM muted_users WHERE id = {user_id}'
    result = db.select_with_fetchone(sql)
    if not result:
        db.query(f'INSERT INTO muted_users(id, counter) VALUES ({user_id}, {0})')
        result = (0,)
    result = result[0] + 1
    db.query(f'UPDATE muted_users '
             f'SET counter = {result} '
             f'WHERE id = {user_id}')
    if result % 3 == 0:
        response = 'mute', result
    else:
        response = 'delete', result
    return response


async def remove_role(member, role_name):
    """–ó–∞–±–∏—Ä–∞–µ—Ç —Ä–æ–ª—å"""
    role = discord.utils.get(member.guild.roles, name=role_name)
    await member.remove_roles(role)


async def give_role(member, role_name):
    """–í—ã–¥–∞–µ—Ç —Ä–æ–ª—å"""
    role = discord.utils.get(member.guild.roles, name=role_name)
    await member.add_roles(role)


async def play_city(ctx):
    """–ò–≥—Ä–∞–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –≥–æ—Ä–æ–¥–∞"""
    global named_cities, city_game, channel_game
    user_city = ctx.content.lower()
    if named_cities and (named_cities[-1][-1] != user_city[0] and
                         named_cities[-1][-1] in ('—ä', '—ã', '—å', '–π') and named_cities[-1][-2] != user_city[0]):
        await ctx.channel.send(f'–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –≤—ã –Ω–∞—á–∞–ª–∏ –Ω–µ —Å —Ç–æ–π –±—É–∫–≤—ã. '
                               f'–ó–∞ –≤—Ä–µ–º—è –∏–≥—Ä—ã –±—ã–ª–æ –Ω–∞–∑–≤–∞–Ω–æ {len(named_cities)} –≥–æ—Ä–æ–¥–æ–≤.')
        city_game = False
        named_cities = []
        channel_game = None
    elif user_city in named_cities:
        await ctx.channel.send(f'–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏. '
                               f'–ó–∞ –≤—Ä–µ–º—è –∏–≥—Ä—ã –±—ã–ª–æ –Ω–∞–∑–≤–∞–Ω–æ {len(named_cities)} –≥–æ—Ä–æ–¥–æ–≤.')
        city_game = False
        named_cities = []
        channel_game = None
    else:
        with open('data/cities.txt') as cities:
            cities_remake = []
            for city in cities:
                if city.strip():
                    cities_remake.append(city.strip().lower())
            cities = cities_remake.copy()
            if user_city not in cities:
                await ctx.channel.send(f'–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –≤ –†–æ—Å—Å–∏–∏ '
                                       f'–ó–∞ –≤—Ä–µ–º—è –∏–≥—Ä—ã –±—ã–ª–æ –Ω–∞–∑–≤–∞–Ω–æ {len(named_cities)} –≥–æ—Ä–æ–¥–æ–≤.')
                city_game = False
                named_cities = []
                channel_game = None
            else:
                good_cities = []
                for city in cities:
                    if city[0].lower() == user_city[-1] or \
                            city[0].lower() == user_city[-2] and user_city[-1] in ('—ã', '—å', '—ä', '–π'):
                        good_cities.append(city)
                try:
                    final_city = random.choice(good_cities)
                except ValueError:
                    await ctx.channel.send(f'–≠—Ç–æ–≥–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å... –£ –º–µ–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –≥–æ—Ä–æ–¥–∞! –í—ã –ø–æ–±–µ–¥–∏–ª–∏! '
                                           f'–ó–∞ –≤—Ä–µ–º—è –∏–≥—Ä—ã –±—ã–ª–æ –Ω–∞–∑–≤–∞–Ω–æ {len(named_cities)} –≥–æ—Ä–æ–¥–æ–≤.')
                    city_game = False
                    named_cities = []
                    channel_game = None
                named_cities.append(user_city)
                named_cities.append(final_city)
                await ctx.channel.send(final_city.capitalize())


async def check_domains(link):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞"""
    for x in domains:
        if link.startswith(x):
            return True
        return False


class MusicCommands(commands.Cog):
    def __init__(self, ds_bot):
        self.bot = ds_bot

    @commands.command(name='play')
    async def play(self, ctx, command=None):
        """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –º—É–∑—ã–∫—É –ø–æ —Å—Å—ã–ª–∫–µ"""
        global server, server_id, channel_name
        author = ctx.author
        if command is None:
            server = ctx.guild
            channel_name = author.voice.channel.name
        params = command.split(' ')
        if len(params) == 1:
            source = params[0]
            server = ctx.guild
            channel_name = author.voice.channel.name
        else:
            await ctx.channel.send(f'–ö–æ–º–∞–Ω–¥–∞ –∏–º–µ–µ—Ç –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ')
            return
        voice_channel = discord.utils.get(server.voice_channels, name=channel_name)
        voice = discord.utils.get(bot.voice_clients, guild=server)
        if voice is None:
            await voice_channel.connect()
            voice = discord.utils.get(bot.voice_clients, guild=server)
        if source is None:
            pass
        elif source.startswith('http'):
            if not await check_domains(source):
                await ctx.channel.send('–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏')
                return
            source = source.split('/')
            album, track = source[4], source[6]
            client.tracks([f'{track}:{album}'])[0].download('data/song.mp3', bitrate_in_kbps=128)
            voice.play(discord.FFmpegPCMAudio('data/song.mp3'))
        else:
            await ctx.channel.send('–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª')
            return

    @commands.command(name='pause')
    async def pause(self, ctx):
        """–ü–æ—Å—Ç–∞–≤–∏—Ç—å –º—É–∑—ã–∫—É –Ω–∞ –ø–∞—É–∑—É"""
        voice = discord.utils.get(bot.voice_clients, guild=server)
        if voice.is_playing():
            voice.pause()
        else:
            await ctx.channel.send('–ú—É–∑—ã–∫–∞ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

    @commands.command(name='resume')
    async def resume(self, ctx):
        """–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏"""
        voice = discord.utils.get(bot.voice_clients, guild=server)
        if voice.is_playing():
            await ctx.channel.send('–ú—É–∑—ã–∫–∞ —É–∂–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è')
        else:
            voice.resume()

    @commands.command(name='stop')
    async def stop(self, ctx):
        """–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏"""
        voice = discord.utils.get(bot.voice_clients, guild=server)
        await voice.stop()
        await ctx.channel.send('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ')

    @commands.command(name='leave')
    async def leave(self, ctx):
        """–ó–∞—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ—Ç–∞ –ø–æ–∫–∏–Ω—É—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"""
        global server, channel_name
        voice = discord.utils.get(bot.voice_clients, guild=server)
        if voice.is_connected():
            await voice.disconnect()
        else:
            await ctx.channel.send('–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ')


class GameCommands(commands.Cog):
    def __init__(self, ds_bot):
        self.bot = ds_bot

    @commands.command(name='city')
    async def city(self, ctx):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –ì–æ—Ä–æ–¥–∞"""
        global city_game, channel_game, named_cities
        channel_game = ctx.channel
        city_game = True
        named_cities = []
        await channel_game.send('–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!')

    @commands.command(name='give_admin')
    @commands.has_permissions(administrator=True)
    async def give_admin(self, ctx, count, member: discord.Member = None):
        """–í—ã–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É —Å—Ä–µ–¥—Å—Ç–≤"""
        count = int(count)
        sql = f'SELECT money FROM users_money WHERE id = {member.id}'
        result = db.select_with_fetchone(sql)
        if not result:
            db.query(f'INSERT INTO users_money(id, money, time) VALUES ({member.id}, {count}, {"1"})')
        else:
            result = result[0]
            db.query(f'UPDATE users_money SET money = {result + count} WHERE id = {member.id}')
        await ctx.channel.send('–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')

    @commands.command(name='give_money')
    async def give_money(self, ctx, count, member: discord.Member = None):
        """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É"""
        if not str(int(count)) == count or int(count) <= 0:
            await ctx.channel.send('–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–æ —á–∏—Å–ª–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏')
            return
        count = int(count)
        sql_author = f'SELECT money FROM users_money WHERE id = {ctx.author.id}'
        sql_member = f'SELECT money FROM users_money WHERE id = {member.id}'
        money_a = db.select_with_fetchone(sql_author)
        money_m = db.select_with_fetchone(sql_member)
        if not money_a:
            db.query(f'INSERT INTO users_money(id, money, time) VALUES ({ctx.author.id}, {0}, {"1"})')
            money_a = (0,)
        if not money_m:
            db.query(f'INSERT INTO users_money(id, money, time) VALUES ({member.id}, {0}, {"1"})')
            money_m = (0,)
        money_a, money_m = money_a[0], money_m[0]
        if money_a > count:
            db.query(f'UPDATE users_money SET money = {money_a - count} WHERE id = {ctx.author.id}')
            db.query(f'UPDATE users_money SET money = {money_m + count} WHERE id = {member.id}')
            await ctx.channel.send('–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        else:
            await ctx.channel.send('–£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–∏—Ö –¥–µ–Ω–µ–≥!')

    @commands.command(name='show_money')
    async def show_money(self, ctx):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        sql = f'SELECT money FROM users_money WHERE id = {ctx.author.id}'
        result = db.select_with_fetchone(sql)
        if not result:
            db.query(f'INSERT INTO users_money(id, money, time) VALUES ({ctx.author.id}, {0}, {"1"})')
            result = (0,)
        await ctx.channel.send(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {result[0]}')

    @commands.command(name='daily')
    async def daily(self, ctx):
        """–í—ã–¥–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É"""
        sql = f'SELECT time, money FROM users_money WHERE id = {ctx.author.id}'
        result = db.select_with_fetchone(sql)
        if not result:
            db.query(f'INSERT INTO users_money(id, money, time) '
                     f'VALUES ({ctx.author.id}, {10}, datetime("now"))')
            await ctx.send('–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
            return
        time_get, money = result
        if time_get == 1 or time_get == '1':
            db.query(f'UPDATE users_money SET money = {money + 10} WHERE id = {ctx.author.id}')
            db.query(f'UPDATE users_money SET time = datetime("now") WHERE id = {ctx.author.id}')
            await ctx.channel.send('–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        else:
            time_get = time_get.split()
            time_get = time_get[0].split('-') + time_get[1].split(':')
            time_get = [int(x) for x in time_get]
            time = dt.datetime(time_get[0], time_get[1], time_get[2],
                               time_get[3], time_get[4], time_get[5]) + dt.timedelta(hours=7)
            if time + dt.timedelta(hours=24) > dt.datetime.now():
                await ctx.send('–°—É—Ç–∫–∏ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∏!')
            else:
                db.query(f'UPDATE users_money SET money = {money + 10} WHERE id = {ctx.author.id}')
                db.query(f'UPDATE users_money SET time = datetime("now") WHERE id = {ctx.author.id}')
                await ctx.channel.send('–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
            pass

    @commands.command(name='show_roles')
    async def show_roles(self, ctx):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫–∏–µ —Ä–æ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
        roles = []
        for key in roles_for_buying.keys():
            roles.append(f'{key}: {roles_for_buying[key]}')
        await ctx.send('\n'.join(roles))

    @commands.command(name='buy_role')
    async def buy_role(self, ctx, *role_name):
        """–ö—É–ø–∏—Ç—å —Ä–æ–ª—å"""
        role_name = ' '.join(role_name)
        sql = f'SELECT money FROM users_money WHERE id = {ctx.author.id}'
        result = db.select_with_fetchone(sql)
        if not result:
            db.query(f'INSERT INTO users_money(id, money, time) VALUES ({ctx.author.id}, {0}, {"1"})')
            result = (0,)
        result = result[0]
        role = discord.utils.get(ctx.guild.roles, name=role_name)
        if not role:
            await ctx.send('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
        elif result < roles_for_buying[role_name]:
            await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
        else:
            await give_role(ctx.author, role_name)
            db.query(f'UPDATE users_money '
                     f'SET money = {result - roles_for_buying[role_name]} WHERE id = {ctx.author.id}')
            await ctx.send('–†–æ–ª—å –∫—É–ø–ª–µ–Ω–∞!')


class ChatCommands(commands.Cog):
    def __init__(self, ds_bot):
        self.bot = ds_bot

    @commands.command(name='elect')
    async def elect(self, ctx, *, command):
        """–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –æ–ø—Ä–æ—Å—ã"""
        params = command.split('/')
        if len(params) == 1:
            text = command
            color = int('ff0000', 16)
            title = ''
        elif len(params) == 2 or len(params) == 3:
            if len(params) == 3:
                title = params[2]
            else:
                title = ''
            text = params[0]
            if params[1] == '':
                color = int('ff0000', 16)
            else:
                color = params[1]
                try:
                    color = int(color, 16)
                except ValueError:
                    await ctx.channel.send(f'{ctx.author.mention}, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω —Ü–≤–µ—Ç')
                    return
        else:
            await ctx.channel.send(f'{ctx.author.mention}, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ä–æ—Å–∞')
            return
        await ctx.message.delete()

        msg = await ctx.channel.send(embed=discord.Embed(title=title, description=text, color=color))
        await msg.add_reaction('‚òë')
        await msg.add_reaction('‚ùå')

    @commands.command(name='ava')
    async def avatar(self, ctx, *, member: discord.Member = None):
        """–í—ã–¥–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_url = member.avatar_url
        await ctx.send(user_url)

    @commands.command(name='ban')
    @commands.has_permissions(ban_members=True)
    async def ban(self, ctx, member: discord.Member, *, reason=None):
        """–ë–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
        await member.ban(reason=reason)
        await ctx.channel.purge(limit=1)
        await ctx.channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}')
        admin_channel = discord.utils.get(ctx.guild.text_channels, name='admin')
        await admin_channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}')

    @commands.command(name='unban')
    @commands.has_permissions(administrator=True)
    async def unban(self, ctx, *member):
        """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
        banned_users = await ctx.guild.bans()
        member = ' '.join(member)
        member_name, member_discriminator = member.split("#")
        for person in banned_users:
            user = person.user
            if (user.name, user.discriminator) == (member_name, member_discriminator):
                await ctx.guild.unban(user)
                await ctx.channel.purge(limit=1)
                admin_channel = discord.utils.get(ctx.guild.text_channels, name='admin')
                await admin_channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')

    @commands.command(name='mute')
    @commands.has_permissions(manage_roles=True)
    async def mute(self, ctx, member: discord.Member, *, reason=None):
        """–í—ã–¥–∞–µ—Ç –º—É—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
        await give_role(member, 'Muted')
        await ctx.channel.purge(limit=1)
        await ctx.channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}')
        admin_channel = discord.utils.get(ctx.guild.text_channels, name='admin')
        await admin_channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}')

    @commands.command(name='unmute')
    @commands.has_permissions(manage_roles=True)
    async def unmute(self, ctx, member: discord.Member):
        """–°–Ω–∏–º–∞–µ—Ç –º—É—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
        await remove_role(member, 'Muted')
        await ctx.channel.purge(limit=1)
        await ctx.channel.send(f'–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} –±—ã–ª —Å–Ω—è—Ç –º—É—Ç.')


@bot.event
async def on_message(ctx):
    """–ü–µ—Ä–≤–∏—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if ctx.author == bot.user:
        return
    author = ctx.author
    with open('data/ban_words.txt', encoding='utf8') as bw:
        for word in bw:
            word = word.strip()
            if word in ctx.content.lower():
                response = await check_count(ctx)
                msg, counter = response
                if msg == 'delete':
                    await ctx.delete()
                    await ctx.channel.send(f'{author.mention}, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞!')
                else:
                    await give_role(author, 'Muted')
                    await ctx.channel.purge(limit=1)
                    await ctx.channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {author.mention} –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç –∏–∑-–∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è '
                                           f'–∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤!')
                admin_channel = discord.utils.get(ctx.guild.text_channels, name='admin')
                embed = discord.Embed(title="–ú–∞—Ç–µ—Ä—à–∏–Ω–∞!",
                                      description=f"{ctx.author.name} —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–∫–∞–∑–∞–ª ||{word}||",
                                      color=discord.Color.blurple())
                await admin_channel.send(embed=embed)
    if city_game and ctx.channel == channel_game:
        await play_city(ctx)
    await bot.process_commands(ctx)


@bot.event
async def on_member_join(member):
    """–ó–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –∫–∞–Ω–∞–ª–µ"""
    ava_url = member.avatar_url
    response = requests.get(ava_url).content
    user_invite = 'data/user_invite.jpg'
    with open(user_invite, 'wb') as file:
        file.write(response)
    image_user = Image.open(user_invite)
    image_user = image_user.convert('RGB')
    image_user.save(user_invite)
    image_user_small = image_user.resize((150, 150))
    image_user_small.save('data/small_user.jpg')
    invite_image = Image.open('data/invite.jpg')
    pixels_invite = invite_image.load()
    pixels_user = image_user_small.load()
    x, y = invite_image.size
    for i in range(x):
        for j in range(y):
            if 229 < i < 380 and 84 < j < 235:
                r, g, b = pixels_user[i - 230, j - 85]
                pixels_invite[i, j] = r, g, b
    invite_image.save('data/final_user_invite.jpg')
    with open('data/final_user_invite.jpg', 'rb') as file:
        picture = discord.File(file)
        channel = discord.utils.get(member.guild.text_channels, name='–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ')
        await channel.send(f'–ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π—Ç–µ {member.mention}!')
        msg = await channel.send(file=picture)
        await msg.add_reaction('üëç')


@bot.event
async def on_raw_reaction_add(payload):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ä–µ–∞–∫—Ü–∏—é"""
    reaction = payload.emoji.name
    user = payload.member
    channel = bot.get_channel(970705900740423701)
    if channel.id != payload.channel_id:
        return
    try:
        await give_role(user, reactions[reaction])
    except KeyError:
        return


bot.add_cog(ChatCommands(bot))
bot.add_cog(GameCommands(bot))
bot.add_cog(MusicCommands(bot))
TOKEN = "OTYxMjIwMjk4ODUyNjg3OTIy.Yk10KQ.Cts8ZF82r0uFA8kQCBpD-lIUY5o"
bot.run(TOKEN)
